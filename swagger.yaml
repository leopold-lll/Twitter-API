swagger: "2.0"
info:
  version: 1.0.0
  title: "Twitter-like"
  description: API for manage tweets, add and look for other tweet
  contact:
    name: Stefano Leonardi
    email: stefano.leonardi-2@studenti.unitn.it
host: twitter-stefano-leonardi.herokuapp.com
basePath: /api/v1/twitter/
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /:
    post:
      description: |
        Upload new tweet
      operationId: sendTweet
      parameters:
        - name: bodyElementPost
          in: body
          description: the ID of who wrote the tweet
          required: true
          schema: 
              $ref: '#/definitions/bodyElementPost'
      responses:
        200:
          description: the input was successful
          
    get:
      description: Fetching the latest tweets, optionally of a specific user if it's pass
      operationId: getLastTweet
      parameters:
        - name: userID
          in: query
          description: the ID of the user you looking for,
            it must respect the regular expression [a-zA-Z0-9]
          required: false
          type: string
      responses:
        200:
          description: list of tweet that respect the required parameters
          schema:
            type: array
            items: 
              $ref: '#/definitions/Tweet'
        400: 
          description: noone tweet found
          schema:
            type: array
            items: 
              $ref: '#/definitions/TweetNotFound'
            maxItems: 1
            minItems: 1
      
  /search:
    get:
      description: get all tweets that have one or more of the passed words in the text
      operationId: getTweetsByWords
      parameters:
        - name: words[]
          in: query
          description: the words that you looking for
          required: true
          type: array
          items:
            type: string
            enum: ["word"]
      responses:
        200:
          description: list of tweet that match the words
          schema:
            type: array
            items: 
              $ref: '#/definitions/Tweet'
        400:
          description: noone tweet found
          schema:
            type: array
            items: 
              $ref: '#/definitions/TweetNotFound'
            maxItems: 1
            minItems: 1
            
definitions:
  Tweet:
    required:
      - tweetID
      - tweetOwner
      - tweetDate
      - tweetText
    properties:
      tweetID:
        type: number
        enum: ["3"]
        description: is the identifier of a tweet
      tweetOwner:
        type: string
        enum: ["d243hq"]
        description: is the identifier of a user
      tweetDate:
        type: number
        enum: ["1518616044860"]
        description: is the date (save in millisecond from 01-01-1970) 
          when the tweet was sent
      tweetText:
        type: string
        enum: ["hi, to everyone"]
        description: is the text of the tweet
    
  TweetNotFound:
    required:
      - message
    properties:
      message:
        enum: ["{message: 'Tweets not found'}"]
  
  bodyElementPost:
    required:
      - tweetOwner
      - tweetText
    properties:
      tweetOwner:
        type: string
        enum: ["d243hq"]
        description: is the identifier of a user,
          it must respect the regular expression [a-zA-Z0-9]
      tweetText:
        type: string
        enum: ["hi, to everyone"]
        description: is the text of the tweet,
          it must respect the regular expression [a-zA-Z0-9èéòàùì .,!?()<>'^+*-_]
          
          
          
          